{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\escbe\\\\Desktop\\\\Code\\\\React\\\\Pern Auth Login\\\\client\\\\src\\\\context\\\\appContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext, useEffect } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { REGISTER_USER_SUCCESS, LOGIN_USER_SUCCESS, VERIFIED_TOKEN, LOG_OUT } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LS_Token = localStorage.getItem(\"token\");\nconst LS_Name = localStorage.getItem(\"name\");\nconst LS_Email = localStorage.getItem(\"email\");\nconst initalState = {\n  isAuthenticated: false,\n  token: LS_Token || \"\",\n  user: {\n    name: LS_Name || \"\",\n    email: LS_Email || \"\"\n  }\n};\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  const registerUser = async (name, email, password) => {\n    try {\n      //post data to server\n      const response = await axios.post(\"http://localhost:5000/auth/register\", {\n        name,\n        email,\n        password\n      }); //get response from server\n\n      console.log(response.data);\n      const token = response.data.token;\n      const n_name = response.data.user.name;\n      const n_email = response.data.user.email; //set local storage\n\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"name\", n_name);\n      localStorage.setItem(\"email\", n_email); //verify token\n\n      const isVerify = await verifyToken(token); //send data to reducer\n\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          token: token,\n          user: {\n            name: n_name,\n            email: n_email\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      //send data to post\n      const response = await axios.post(\"http://localhost:5000/auth/login\", {\n        email,\n        password\n      }); //get response\n\n      console.log(response.data);\n      const token = response.data.token;\n      const n_name = response.data.user.name;\n      const n_email = response.data.user.email; //set local storage\n\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"name\", n_name);\n      localStorage.setItem(\"email\", n_email); //verify token\n\n      const isVerify = await verifyToken(token);\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n          token: token,\n          user: {\n            name: n_name,\n            email: n_email\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const verifyToken = async token => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/auth/verify\", {\n        headers: {\n          token: token\n        }\n      }); //console.log(response, \"EVRRVRVRR\");\n\n      dispatch({\n        type: VERIFIED_TOKEN,\n        payload: {\n          auth: response.data\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const logoutUser = () => {\n    try {\n      dispatch({\n        type: LOG_OUT\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: { ...state,\n      registerUser,\n      loginUser,\n      verifyToken,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"MfeFq/YeXq1laAm5Bb2FPVG97dI=\");\n\n_c = AppProvider;\n\nconst useAppContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppProvider, initalState, useAppContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/escbe/Desktop/Code/React/Pern Auth Login/client/src/context/appContext.js"],"names":["React","useReducer","useContext","useEffect","reducer","axios","REGISTER_USER_SUCCESS","LOGIN_USER_SUCCESS","VERIFIED_TOKEN","LOG_OUT","LS_Token","localStorage","getItem","LS_Name","LS_Email","initalState","isAuthenticated","token","user","name","email","AppContext","createContext","AppProvider","children","state","dispatch","registerUser","password","response","post","console","log","data","n_name","n_email","setItem","isVerify","verifyToken","type","payload","error","message","loginUser","get","headers","auth","logoutUser","useAppContext"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext, useEffect } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  REGISTER_USER_SUCCESS,\r\n  LOGIN_USER_SUCCESS,\r\n  VERIFIED_TOKEN,\r\n  LOG_OUT,\r\n} from \"./actions\";\r\n\r\nconst LS_Token = localStorage.getItem(\"token\");\r\nconst LS_Name = localStorage.getItem(\"name\");\r\nconst LS_Email = localStorage.getItem(\"email\");\r\n\r\nconst initalState = {\r\n  isAuthenticated: false,\r\n  token: LS_Token || \"\",\r\n  user: {\r\n    name: LS_Name || \"\",\r\n    email: LS_Email || \"\",\r\n  },\r\n};\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initalState);\r\n\r\n  const registerUser = async (name, email, password) => {\r\n    try {\r\n      //post data to server\r\n      const response = await axios.post(\"http://localhost:5000/auth/register\", {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      //get response from server\r\n      console.log(response.data);\r\n      const token = response.data.token;\r\n      const n_name = response.data.user.name;\r\n      const n_email = response.data.user.email;\r\n\r\n      //set local storage\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"name\", n_name);\r\n      localStorage.setItem(\"email\", n_email);\r\n\r\n      //verify token\r\n      const isVerify = await verifyToken(token);\r\n\r\n      //send data to reducer\r\n      dispatch({\r\n        type: REGISTER_USER_SUCCESS,\r\n        payload: {\r\n          token: token,\r\n          user: {\r\n            name: n_name,\r\n            email: n_email,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      //send data to post\r\n      const response = await axios.post(\"http://localhost:5000/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      //get response\r\n      console.log(response.data);\r\n      const token = response.data.token;\r\n      const n_name = response.data.user.name;\r\n      const n_email = response.data.user.email;\r\n\r\n      //set local storage\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"name\", n_name);\r\n      localStorage.setItem(\"email\", n_email);\r\n\r\n      //verify token\r\n      const isVerify = await verifyToken(token);\r\n\r\n      dispatch({\r\n        type: LOGIN_USER_SUCCESS,\r\n        payload: {\r\n          token: token,\r\n          user: {\r\n            name: n_name,\r\n            email: n_email,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const verifyToken = async (token) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/auth/verify\", {\r\n        headers: {\r\n          token: token,\r\n        },\r\n      });\r\n      //console.log(response, \"EVRRVRVRR\");\r\n      dispatch({ type: VERIFIED_TOKEN, payload: { auth: response.data } });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    try {\r\n      dispatch({ type: LOG_OUT });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ ...state, registerUser, loginUser, verifyToken, logoutUser }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { AppProvider, initalState, useAppContext };\r\n"]},"metadata":{},"sourceType":"module"}