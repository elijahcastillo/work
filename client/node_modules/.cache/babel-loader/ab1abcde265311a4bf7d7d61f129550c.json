{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\escbe\\\\Desktop\\\\Code\\\\React\\\\Pern Auth Login\\\\client\\\\src\\\\context\\\\appContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext } from \"react\";\nimport reducer from \"./reducer\"; //import axios from 'axios';\n\nimport { LOGGED_IN, LOG_OUT } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalState = {\n  isAuthenticated: false,\n  token: \"\",\n  user: {\n    name: \"\",\n    email: \"\"\n  }\n};\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  const registerUser = async (name, email, password) => {\n    try {\n      const body = {\n        name,\n        email,\n        password\n      };\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const loginUser = async (req, res) => {};\n\n  const logoutUser = () => {};\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: { ...state,\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"MfeFq/YeXq1laAm5Bb2FPVG97dI=\");\n\n_c = AppProvider;\n\nconst useAppContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppProvider, initalState, useAppContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/escbe/Desktop/Code/React/Pern Auth Login/client/src/context/appContext.js"],"names":["React","useReducer","useContext","reducer","LOGGED_IN","LOG_OUT","initalState","isAuthenticated","token","user","name","email","AppContext","createContext","AppProvider","children","state","dispatch","registerUser","password","body","response","fetch","method","headers","JSON","stringify","console","log","error","message","loginUser","req","res","logoutUser","useAppContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE,KADC;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAHY,CAApB;AASA,MAAMC,UAAU,gBAAGZ,KAAK,CAACa,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,OAAD,EAAUG,WAAV,CAApC;;AAEA,QAAMY,YAAY,GAAG,OAAOR,IAAP,EAAaC,KAAb,EAAoBQ,QAApB,KAAiC;AACpD,QAAI;AACF,YAAMC,IAAI,GAAG;AAAEV,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeQ,QAAAA;AAAf,OAAb;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AAClEC,QAAAA,MAAM,EAAE,MAD0D;AAElEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyD;AAKlEJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAL4D,OAAxC,CAA5B;AAQAO,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,KAXD,CAWE,OAAOQ,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACD;AACF,GAfD;;AAiBA,QAAMC,SAAS,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB,CAAE,CAAxC;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,EAAE,GAAGlB,KAAL;AAAYE,MAAAA;AAAZ,KAA5B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMD,W;;KAAAA,W;;AA+BN,MAAMqB,aAAa,GAAG,MAAM;AAAA;;AAC1B,SAAOjC,UAAU,CAACU,UAAD,CAAjB;AACD,CAFD;;IAAMuB,a;;AAGN,SAASrB,WAAT,EAAsBR,WAAtB,EAAmC6B,aAAnC","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\nimport reducer from \"./reducer\";\r\n//import axios from 'axios';\r\nimport { LOGGED_IN, LOG_OUT } from \"./actions\";\r\n\r\nconst initalState = {\r\n  isAuthenticated: false,\r\n  token: \"\",\r\n  user: {\r\n    name: \"\",\r\n    email: \"\",\r\n  },\r\n};\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initalState);\r\n\r\n  const registerUser = async (name, email, password) => {\r\n    try {\r\n      const body = { name, email, password };\r\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (req, res) => {};\r\n\r\n  const logoutUser = () => {};\r\n\r\n  return (\r\n    <AppContext.Provider value={{ ...state, registerUser }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { AppProvider, initalState, useAppContext };\r\n"]},"metadata":{},"sourceType":"module"}